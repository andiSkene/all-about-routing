{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andis\\\\Desktop\\\\ReactClass\\\\adv-starting-project\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport { Suspense } from 'react';\nimport { useLoaderData, defer, Await } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n\n  /*     if(data.isError) {\r\n          return <p>{data.message}</p>\r\n      }\r\n   */\n  /*     const events = data.events;\r\n  \r\n      return (\r\n          <>\r\n              <EventsList events={events} />\r\n          </>\r\n      );\r\n   */\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 32\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loadedEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 12\n  }, this);\n}\n_s(EventsPage, \"xTcuS98fsVcq20se00iLm8bDBmQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    console.log('there was an error');\n    //return { isError: true, message:'Could not fetch events.'};\n    throw new Response(JSON.stringify({\n      message: 'Could not fetch events'\n    }), {\n      status: 500\n    });\n  } else {\n    //const resData = await response.json();\n    //return resData.events;\n    return response;\n  }\n}\nexport function loader() {\n  defer({\n    events: loadEvents()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["Suspense","useLoaderData","defer","Await","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","events","fallback","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvents","_c","loadEvents","response","fetch","ok","console","log","Response","JSON","stringify","message","status","loader","$RefreshReg$"],"sources":["C:/Users/andis/Desktop/ReactClass/adv-starting-project/frontend/src/pages/Events.js"],"sourcesContent":["import { Suspense } from 'react';\r\nimport { useLoaderData, defer, Await } from 'react-router-dom';\r\nimport EventsList from '../components/EventsList';\r\n\r\nfunction EventsPage() {\r\n    const { events } = useLoaderData();\r\n\r\n    /*     if(data.isError) {\r\n            return <p>{data.message}</p>\r\n        }\r\n     */\r\n    /*     const events = data.events;\r\n    \r\n        return (\r\n            <>\r\n                <EventsList events={events} />\r\n            </>\r\n        );\r\n     */\r\n    return <Suspense fallback={<p style={{ textAlign: 'center' }}>Loading...</p>}>\r\n        <Await resolve={events}>\r\n            {(loadedEvents) => <EventsList events={loadedEvents} />}\r\n        </Await>\r\n    </Suspense>\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nasync function loadEvents() {\r\n    const response = await fetch('http://localhost:8080/events');\r\n\r\n    if (!response.ok) {\r\n        console.log('there was an error')\r\n        //return { isError: true, message:'Could not fetch events.'};\r\n        throw new Response(JSON.stringify({ message: 'Could not fetch events' }), { status: 500 });\r\n    } else {\r\n        //const resData = await response.json();\r\n        //return resData.events;\r\n        return response;\r\n    }\r\n}\r\n\r\nexport function loader() {\r\n    defer({\r\n        events: loadEvents(),\r\n    });\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,EAAEC,KAAK,EAAEC,KAAK,QAAQ,kBAAkB;AAC9D,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM;IAAEC;EAAO,CAAC,GAAGR,aAAa,CAAC,CAAC;;EAElC;AACJ;AACA;AACA;EACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI,oBAAOK,OAAA,CAACN,QAAQ;IAACU,QAAQ,eAAEJ,OAAA;MAAGK,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAE;IAAAJ,QAAA,eACzEP,OAAA,CAACH,KAAK;MAACe,OAAO,EAAET,MAAO;MAAAI,QAAA,EACjBM,YAAY,iBAAKb,OAAA,CAACF,UAAU;QAACK,MAAM,EAAEU;MAAa;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AACf;AAACT,EAAA,CApBQD,UAAU;EAAA,QACIN,aAAa;AAAA;AAAAmB,EAAA,GAD3Bb,UAAU;AAsBnB,eAAeA,UAAU;AAEzB,eAAec,UAAUA,CAAA,EAAG;EACxB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACdC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACjC;IACA,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAAyB,CAAC,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC9F,CAAC,MAAM;IACH;IACA;IACA,OAAOT,QAAQ;EACnB;AACJ;AAEA,OAAO,SAASU,MAAMA,CAAA,EAAG;EACrB9B,KAAK,CAAC;IACFO,MAAM,EAAEY,UAAU,CAAC;EACvB,CAAC,CAAC;AACN;AAAC,IAAAD,EAAA;AAAAa,YAAA,CAAAb,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}