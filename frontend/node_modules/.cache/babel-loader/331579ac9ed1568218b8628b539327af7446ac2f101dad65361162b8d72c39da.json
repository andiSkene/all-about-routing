{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andis\\\\Desktop\\\\ReactClass\\\\adv-starting-project\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport { Suspense } from 'react';\nimport { useLoaderData, defer, Await, json } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 33\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loadedEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 13\n  }, this);\n}\n_s(EventsPage, \"xTcuS98fsVcq20se00iLm8bDBmQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/eventsssss');\n  const messageTest = json({\n    message: 'this is a test'\n  }, {\n    status: 500\n  });\n  console.log(\"this is the message\", messageTest);\n  if (!response.ok) {\n    //return { isError: true, message:'Could not fetch events.'};\n    console.log('this is not okay');\n    return new Response(JSON.stringify({\n      message: 'Could not fetch events'\n    }), {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n    //return response;\n  }\n}\nexport function loader() {\n  return defer({\n    events: loadEvents()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["Suspense","useLoaderData","defer","Await","json","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","events","fallback","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvents","_c","loadEvents","response","fetch","messageTest","message","status","console","log","ok","Response","JSON","stringify","resData","loader","$RefreshReg$"],"sources":["C:/Users/andis/Desktop/ReactClass/adv-starting-project/frontend/src/pages/Events.js"],"sourcesContent":["import { Suspense } from 'react';\r\nimport { useLoaderData, defer, Await, json } from 'react-router-dom';\r\nimport EventsList from '../components/EventsList';\r\n\r\nfunction EventsPage() {\r\n    const { events } = useLoaderData();\r\n     \r\n     return <Suspense fallback={<p style={{ textAlign: 'center' }}>Loading...</p>}>\r\n        <Await resolve={events}>\r\n            {(loadedEvents) => <EventsList events={loadedEvents} />}\r\n        </Await>\r\n    </Suspense>\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nasync function loadEvents() {\r\n    const response = await fetch('http://localhost:8080/eventsssss');\r\n    const messageTest = json(\r\n        { message: 'this is a test'},\r\n        { status: 500 }\r\n    )\r\n    console.log(\"this is the message\",messageTest);\r\n\r\n    if (!response.ok) {\r\n        //return { isError: true, message:'Could not fetch events.'};\r\n        console.log('this is not okay')\r\n        return new Response(JSON.stringify({ message: 'Could not fetch events' }), { status: 500 });\r\n    } else {\r\n        const resData = await response.json();\r\n        return resData.events;\r\n        //return response;\r\n    }\r\n}\r\n\r\nexport function loader() {\r\n    return defer({\r\n        events: loadEvents(),\r\n    });\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,EAAEC,KAAK,EAAEC,KAAK,EAAEC,IAAI,QAAQ,kBAAkB;AACpE,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM;IAAEC;EAAO,CAAC,GAAGT,aAAa,CAAC,CAAC;EAEjC,oBAAOM,OAAA,CAACP,QAAQ;IAACW,QAAQ,eAAEJ,OAAA;MAAGK,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAE;IAAAJ,QAAA,eAC1EP,OAAA,CAACJ,KAAK;MAACgB,OAAO,EAAET,MAAO;MAAAI,QAAA,EACjBM,YAAY,iBAAKb,OAAA,CAACF,UAAU;QAACK,MAAM,EAAEU;MAAa;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AACf;AAACT,EAAA,CARQD,UAAU;EAAA,QACIP,aAAa;AAAA;AAAAoB,EAAA,GAD3Bb,UAAU;AAUnB,eAAeA,UAAU;AAEzB,eAAec,UAAUA,CAAA,EAAG;EACxB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC;EAChE,MAAMC,WAAW,GAAGrB,IAAI,CACpB;IAAEsB,OAAO,EAAE;EAAgB,CAAC,EAC5B;IAAEC,MAAM,EAAE;EAAI,CAClB,CAAC;EACDC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAACJ,WAAW,CAAC;EAE9C,IAAI,CAACF,QAAQ,CAACO,EAAE,EAAE;IACd;IACAF,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/B,OAAO,IAAIE,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEP,OAAO,EAAE;IAAyB,CAAC,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC/F,CAAC,MAAM;IACH,MAAMO,OAAO,GAAG,MAAMX,QAAQ,CAACnB,IAAI,CAAC,CAAC;IACrC,OAAO8B,OAAO,CAACxB,MAAM;IACrB;EACJ;AACJ;AAEA,OAAO,SAASyB,MAAMA,CAAA,EAAG;EACrB,OAAOjC,KAAK,CAAC;IACTQ,MAAM,EAAEY,UAAU,CAAC;EACvB,CAAC,CAAC;AACN;AAAC,IAAAD,EAAA;AAAAe,YAAA,CAAAf,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}