{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andis\\\\Desktop\\\\ReactClass\\\\adv-starting-project\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage -----------check!\n//    - EventsPage -----------check!\n//    - EventDetailPage -----------check!\n//    - NewEventPage -----------check!\n//    - EditEventPage -----------check!\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage -----------check!\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { createBrowserRouter } from 'react-router-dom';\nimport HomePage from './pages/Home';\nimport Events from './pages/Events';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  //element: <RootLayout />,\n  //errorElement: <Error />, \n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 28\n    }, this)\n  }, {\n    path: '/events',\n    element: /*#__PURE__*/_jsxDEV(Events, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 33\n    }, this)\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","HomePage","Events","jsxDEV","_jsxDEV","router","path","children","index","element","fileName","_jsxFileName","lineNumber","columnNumber","App","_c","$RefreshReg$"],"sources":["C:/Users/andis/Desktop/ReactClass/adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage -----------check!\n//    - EventsPage -----------check!\n//    - EventDetailPage -----------check!\n//    - NewEventPage -----------check!\n//    - EditEventPage -----------check!\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage -----------check!\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { createBrowserRouter } from 'react-router-dom';\nimport HomePage from './pages/Home';\nimport Events from './pages/Events';\n\nconst router = createBrowserRouter([\n  {path: '/',\n  //element: <RootLayout />,\n  //errorElement: <Error />, \n  children: [\n    { index:true, element: <HomePage /> },\n    { path: '/events', element: <Events /> },\n  ]}\n]);\n\nfunction App() {\n  return <div></div>;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,mBAAmB,QAAQ,kBAAkB;AACtD,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,MAAM,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,MAAM,GAAGL,mBAAmB,CAAC,CACjC;EAACM,IAAI,EAAE,GAAG;EACV;EACA;EACAC,QAAQ,EAAE,CACR;IAAEC,KAAK,EAAC,IAAI;IAAEC,OAAO,eAAEL,OAAA,CAACH,QAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EACrC;IAAEP,IAAI,EAAE,SAAS;IAAEG,OAAO,eAAEL,OAAA,CAACF,MAAM;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC;AACzC,CAAC,CACH,CAAC;AAEF,SAASC,GAAGA,CAAA,EAAG;EACb,oBAAOV,OAAA;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC;AACpB;AAACE,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}