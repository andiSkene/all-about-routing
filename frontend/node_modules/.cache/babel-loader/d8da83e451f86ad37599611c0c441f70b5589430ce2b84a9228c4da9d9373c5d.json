{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andis\\\\Desktop\\\\ReactClass\\\\adv-starting-project\\\\frontend\\\\src\\\\pages\\\\NewEvent.js\";\nimport EventForm from '../components/EventForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 12\n  }, this);\n}\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action({\n  request,\n  params\n}) {\n  console.log('run action');\n  const data = await request.formData();\n  console.log('data =', data);\n  console.log('title', data.get('title'));\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    data: data.get('date'),\n    description: data.get('description')\n  };\n  console.log('this is the event', eventData);\n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  console.log('response', response);\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: 'Could not save event.'\n    }), {\n      status: 500\n    });\n  }\n}\n;\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["EventForm","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","console","log","data","formData","get","eventData","title","image","description","response","fetch","method","headers","body","JSON","stringify","ok","Response","message","status","$RefreshReg$"],"sources":["C:/Users/andis/Desktop/ReactClass/adv-starting-project/frontend/src/pages/NewEvent.js"],"sourcesContent":["import EventForm from '../components/EventForm';\r\n\r\nfunction NewEventPage() {\r\n    return <EventForm />\r\n}\r\n\r\nexport default NewEventPage;\r\n\r\nexport async function action({ request, params }) {\r\n    console.log('run action')\r\n   const data = await request.formData();\r\n   console.log('data =',data)\r\n   console.log('title',data.get('title'))\r\n \r\n    const eventData = {\r\n        title: data.get('title'),\r\n        image: data.get('image'),\r\n        data: data.get('date'),\r\n        description: data.get('description')\r\n    }\r\n    console.log('this is the event',eventData)\r\n\r\n    const response = await fetch('http://localhost:8080/events', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(eventData)\r\n    });\r\n    console.log('response',response)\r\n\r\n    if (!response.ok) {\r\n        throw new Response(JSON.stringify({ message: 'Could not save event.'}), { status: 500 })\r\n    }\r\n};"],"mappings":";AAAA,OAAOA,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,YAAYA,CAAA,EAAG;EACpB,oBAAOD,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxB;AAACC,EAAA,GAFQL,YAAY;AAIrB,eAAeA,YAAY;AAE3B,OAAO,eAAeM,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAC9CC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EAC1B,MAAMC,IAAI,GAAG,MAAMJ,OAAO,CAACK,QAAQ,CAAC,CAAC;EACrCH,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACC,IAAI,CAAC;EAC1BF,OAAO,CAACC,GAAG,CAAC,OAAO,EAACC,IAAI,CAACE,GAAG,CAAC,OAAO,CAAC,CAAC;EAErC,MAAMC,SAAS,GAAG;IACdC,KAAK,EAAEJ,IAAI,CAACE,GAAG,CAAC,OAAO,CAAC;IACxBG,KAAK,EAAEL,IAAI,CAACE,GAAG,CAAC,OAAO,CAAC;IACxBF,IAAI,EAAEA,IAAI,CAACE,GAAG,CAAC,MAAM,CAAC;IACtBI,WAAW,EAAEN,IAAI,CAACE,GAAG,CAAC,aAAa;EACvC,CAAC;EACDJ,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAACI,SAAS,CAAC;EAE1C,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IACzDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,SAAS;EAClC,CAAC,CAAC;EACFL,OAAO,CAACC,GAAG,CAAC,UAAU,EAACQ,QAAQ,CAAC;EAEhC,IAAI,CAACA,QAAQ,CAACO,EAAE,EAAE;IACd,MAAM,IAAIC,QAAQ,CAACH,IAAI,CAACC,SAAS,CAAC;MAAEG,OAAO,EAAE;IAAuB,CAAC,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC5F;AACJ;AAAC;AAAC,IAAAvB,EAAA;AAAAwB,YAAA,CAAAxB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}